
//  VLESS + TCP + TLS + Nginx + WebSocket,  client configuration  JP.CCCEYE.COM

// REFERENCE:
// https://github.com/XTLS/Xray-examples
// https://xtls.github.io/config/

// 常用的config文件，不论服务器端还是客户端，都有5个部分。外加小小白解读：
// ┌─ 1_log          日志设置 - 日志写什么，写哪里（出错时有据可查）
// ├─ 2_dns          DNS-设置 - DNS怎么查（防DNS污染、防偷窥、避免国内外站匹配到国外服务器等）
// ├─ 3_routing      分流设置 - 流量怎么分类处理（是否过滤广告、是否国内外分流）
// ├─ 4_inbounds     入站设置 - 什么流量可以流入Xray
// └─ 5_outbounds    出站设置 - 流出Xray的流量往哪里去


{
    // 1_日志设置
    // 注意，本例中我默认注释掉了日志文件，因为windows, macOS, Linux 需要写不同的路径，请自行配置
    "log": {
        // "access": "/home/local/xray_log/access.log",    // 访问记录
        // "error": "/home/local/xray_log/error.log",    // 错误记录
        "loglevel": "error"        // 内容从少到多: "none", "error", "warning", "info", "debug" 
    },

    // 2_DNS设置
    "dns": {
        "servers": [
            // 2.1 国外域名使用国外DNS查询
            {
                "address": "1.1.1.1",
                "domains": [
                    "geosite:geolocation-!cn"
                ]
            },
            // 2.2 国内域名使用国内DNS查询，并期待返回国内的IP，若不是国内IP则舍弃，用下一个查询
            {
                "address": "114.114.115.115",
                "domains": [
                    "geosite:cn"
                ],
                "expectIPs": [
                    "geoip:cn"
                ]
            },
            // 2.3 作为2.2的备份，对国内网站进行二次查询
            {
                "address": "1.2.3.4",
                "domains": [
                    "geosite:cn"
                ]
            },
            // 2.4 最后的备份，上面全部失败时，用本机DNS查询
            "localhost"
        ]
    },

    // 3_分流设置
    // 所谓分流，就是将符合否个条件的流量，用指定`tag`的出站协议去处理（对应配置的5.x内容）
    "routing": {
        "domainStrategy": "AsIs",
        "rules": [
            // 3.1 广告域名屏蔽
            {
                "type": "field",
                "domain": [
                    "geosite:category-ads-all"
                ],
                "outboundTag": "block"
            },
            // 3.2 国内域名直连
            {
                "type": "field",
                "domain": [
                    "geosite:cn"
                ],
                "outboundTag": "direct"
            },
            // 3.3 国内IP直连
            {
                "type": "field",
                "ip": [
                    "geoip:cn",
                    "geoip:private"
                ],
                "outboundTag": "direct"
            },
            // 3.4 国外域名代理
            {
                "type": "field",
                "domain": [
                    "geosite:geolocation-!cn"
                ],
                "outboundTag": "proxy"
            }
            // 3.5 默认规则
            // 在Xray中，任何不符合上述路由规则的流量，都会默认使用【第一个outbound（5.1）】的设置，所以一定要把转发VPS的outbound放第一个
        ]
    },

    // 4_入站设置
    "inbounds": [
        // 4.1 一般都默认使用socks5协议作本地转发
        {
            "tag": "socks-in",
            "protocol": "socks",
            "listen": "127.0.0.1",   // 这个是通过socks5协议做本地转发的地址
            "port": 1080,           // 这个是通过socks5协议做本地转发的端口
            "settings": {
                "udp": true
            }
        },
        // 4.2 有少数APP不兼容socks协议，需要用http协议做转发，则可以用下面的端口
        {
            "tag": "http-in",
            "protocol": "http",
            "listen": "127.0.0.1",   // 这个是通过http协议做本地转发的地址
            "port": 1081            // 这个是通过http协议做本地转发的端口
        }
    ],

    // 5_出站设置
    "outbounds": [
    // 5.1 默认转发VPS
    // 一定放在第一个，在routing 3.5 里面已经说明了，这等于是默认规则，所有不符合任何规则的流量都走这个
        {
            "tag": "proxy",
            "protocol": "vless",
            "settings": {
                "vnext": [
                    {
                        "address": "jp.ccceye.com",  // 替换成你的真实域名
                        "port": 443,
                        "users": [
                            {
                                "id": "1a2caf18-5865-4dab-a671-0f1fe7c18696",  // 和服务器端的一致
                               // "flow": "xtls-rprx-direct",       // Windows, macOS 同学保持这个不变
                                // "flow": "xtls-rprx-splice",    // Linux和安卓同学请改成Splice性能更强
                                "encryption": "none",
                                "level": 0
                            }
                        ]
                    }
                ]
            },
            "streamSettings": {
                "network": "ws",
                "security": "tls",
                "tlsSettings": {
                    "serverName": "jp.ccceye.com",   // 替换成你的真实域名
                    "allowInsecure": false        // 禁止不安全证书
                },
                "wsSettings": {
                    "path": "/4d23f371743ce7/"        //与服务器配置及nginx配置相关
                }
            }
        },
        // 5.2 用`freedom`协议直连出站，即当routing中指定'direct'流出时，调用这个协议做处理
        {
            "tag": "direct",
            "protocol": "freedom"
        },
        // 5.3 用`blackhole`协议屏蔽流量，即当routing中指定'block'时，调用这个协议做处理
        {
            "tag": "block",
            "protocol": "blackhole"
        }
    ]    
}
